# Generated by Django 3.2.7 on 2021-10-22 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('questions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(default='New Session', max_length=20, verbose_name='Session name')),
                ('session_descriptions', models.CharField(default='Description', max_length=150, verbose_name='Session descriptions')),
                ('session_ref_number', models.CharField(blank=True, editable=False, max_length=20, unique=True, verbose_name='Session reference code')),
                ('exam_start', models.DateTimeField(verbose_name='Exam start time')),
                ('strict_timing', models.BooleanField(default=False, verbose_name='Strict Timing')),
                ('show_score', models.BooleanField(default=False, verbose_name='Show scores at the end to the applicant?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active session?')),
                ('participants', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group', verbose_name='Exam participants as group')),
                ('questions', models.ManyToManyField(to='questions.QuestionModel')),
                ('subject_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_exam_sessions', to='questions.subjectexammodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(default='New Session', max_length=20, verbose_name='Session name')),
                ('session_descriptions', models.CharField(default='Description', max_length=150, verbose_name='Session descriptions')),
                ('session_ref_number', models.CharField(blank=True, editable=False, max_length=20, unique=True, verbose_name='Session reference code')),
                ('exam_start', models.DateTimeField(verbose_name='Exam start time')),
                ('strict_timing', models.BooleanField(default=False, verbose_name='Strict Timing')),
                ('show_score', models.BooleanField(default=False, verbose_name='Show scores at the end to the applicant?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active session?')),
                ('course_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_course_exams', to='questions.courseexammodel')),
                ('participants', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group', verbose_name='Exam participants as group')),
                ('questions', models.ManyToManyField(to='questions.QuestionModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExamResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_ref_number', models.CharField(blank=True, max_length=20, verbose_name='Session reference code')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answers', models.JSONField(blank=True, null=True, verbose_name='Answers')),
                ('score', models.IntegerField(blank=True, null=True, verbose_name='Score')),
                ('is_passed', models.BooleanField(default=False, verbose_name='Passed in exam')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Exam is finished')),
                ('show_score', models.BooleanField(default=False, verbose_name='Show score at the end of the exam?')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Exam Results',
                'unique_together': {('student', 'session_ref_number')},
            },
        ),
    ]
