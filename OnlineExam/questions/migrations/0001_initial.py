# Generated by Django 3.2.7 on 2023-03-31 10:29

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0015_alter_file_owner_alter_file_polymorphic_ctype_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseExamModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50, unique=True, verbose_name='Exam Name')),
                ('noq_total', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of questions')),
                ('exam_duration', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Exam duration in minutes')),
                ('pass_score', models.IntegerField(default=50, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True, verbose_name='Exam model is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Course based exam',
            },
        ),
        migrations.CreateModel(
            name='CourseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100, verbose_name='Course name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Course',
            },
        ),
        migrations.CreateModel(
            name='SubjectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=100, verbose_name='Subject')),
                ('instruction_hours', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(200)], verbose_name='Instruction hours')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='questions.coursemodel')),
            ],
            options={
                'verbose_name': 'Subject',
            },
        ),
        migrations.CreateModel(
            name='SubjectExamModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50, unique=True, verbose_name='Exam Name')),
                ('noq_total', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of questions')),
                ('exam_duration', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Exam duration in minutes')),
                ('pass_score', models.IntegerField(default=50, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True, verbose_name='Exam model is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_exams', to='questions.subjectmodel')),
            ],
            options={
                'verbose_name': 'Subject based exam',
            },
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('question_content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Question')),
                ('question_ref_code', models.CharField(blank=True, max_length=10, unique=True)),
                ('opt_1', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='A')),
                ('opt_2', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='B')),
                ('opt_3', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='C')),
                ('opt_4', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='D')),
                ('correct_answer', models.IntegerField(choices=[(1, 'A'), (2, 'B'), (3, 'C'), (4, 'D')], verbose_name='Correct answer')),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('very hard', 'Very hard')], max_length=20, verbose_name='Difficulty Level')),
                ('numb_of_appeared', models.IntegerField(default=0, verbose_name='Number of times the question appeared in exams')),
                ('correctly_answered_times', models.IntegerField(default=0, verbose_name='Number of times the question answered correctly')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
                ('question_file', filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplementary_file', to='filer.file')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_questions', to='questions.subjectmodel')),
            ],
            options={
                'verbose_name': 'Question bank',
            },
        ),
        migrations.CreateModel(
            name='PerSubjectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noq_subject', models.IntegerField(default=0, help_text="Total number of questions should not exceed exam's number of questions", verbose_name='Number of questions in this subject')),
                ('course_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_for_course', to='questions.courseexammodel')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects_for_exam', to='questions.subjectmodel')),
            ],
        ),
        migrations.AddField(
            model_name='courseexammodel',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_exam', to='questions.coursemodel'),
        ),
    ]
